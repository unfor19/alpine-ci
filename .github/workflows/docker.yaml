name: Push latest version to DockerHub

on:
  push:
    branches: [master]
    paths-ignore:
      - "README.md"

jobs:
  dockerhub-latest:
    runs-on: ubuntu-latest
    env:
      DOCKER_ORG: unfor19
      DOCKER_REPO: alpine-ci
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x      
      - name: Inject env vars
        run: |
          export DOCKER_TAG_LATEST=${DOCKER_ORG}/${DOCKER_REPO}:latest
          export DOCKER_TAG_RELEASE=${DOCKER_ORG}/${DOCKER_REPO}:${GITHUB_REF_SLUG//\//-}-${GITHUB_SHA:0:8}
          echo "DOCKER_TAG_LATEST=${DOCKER_TAG_LATEST}" >> version
          echo "DOCKER_TAG_RELEASE=${DOCKER_TAG_RELEASE}" >> version
          cat version >> "$GITHUB_ENV"
      - name: Build Docker Image
        run: |
          declare -a build_args
          version_list=($(cat version))
          for item in "${version_list[@]}"; do
            if [[ -n "$item" && $item != *DOCKER_TAG_* ]]; then
              var_name=$(echo "$item" | cut -d'=' -f 1 )
              var_value=$(echo "$item" | cut -d'=' -f 2 )
            build_args+=("--build-arg ${var_name}=${var_value}")
            fi
          done
          echo Build arguments: ${build_args[@]}
          docker build --file Dockerfile --tag "${DOCKER_TAG_LATEST}" --tag "${DOCKER_TAG_RELEASE}" ${build_args[@]} .
      # - name: Push to DockerHub
      #   run: |
      #     echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #     docker push "${DOCKER_TAG_LATEST}" --all-tags
      #     echo -e "\nPushed:\n${DOCKER_TAG_LATEST}\n${DOCKER_TAG_RELEASE}"
